define
  content sub entity, abstract;

  page sub content, abstract,
    owns name,
    owns bio,
    owns profile-picture,
    plays posting:page,
    plays view-permission:viewable,
    plays viewing:viewed;

  profile sub page, abstract,
    owns username,
    plays viewing:viewer,
    plays content-engagement:author,
    plays view-permission:viewer;

  person sub profile,
    owns gender,
    owns language,
    owns email,
    owns phone,
    owns relationship-status,
    owns page-visibility,
    owns post-visibility,
    plays birth:born,
    plays friendship:friend,
    plays family:relative,
    plays parentship:parent,
    plays parentship:child,
    plays siblingship:sibling,
    plays relationship:partner,
    plays engagement:fiance,
    plays marriage:spouse,
    plays employment:employee,
    plays education:attendee,
    plays group-membership:member,
    plays location:located;

  birth sub relation,
    relates born,
    owns birth-date,
    plays location:located;

  social-relation sub relation, abstract,
    relates related;

  friendship sub social-relation,
    relates friend as related;

  family sub social-relation,
    relates relative as related;

  parentship sub family,
    relates parent as relative,
    relates child as relative;

  siblingship sub family,
    relates sibling as relative;

  relationship sub social-relation,
    relates partner as related,
    owns start-date;

  engagement sub relationship,
    relates fiance as partner,
    owns engagement-date,
    plays location:located;

  marriage sub relationship,
    relates spouse as partner,
    owns marriage-date,
    plays location:located;

  organisation sub profile,
    owns tag,
    plays employment:employer,
    plays location:located;

  company sub organisation;
  charity sub organisation;

  educational-institute sub organisation,
    plays education:institute;

  school sub educational-institute;
  college sub educational-institute;
  university sub educational-institute;

  employment sub relation,
    relates employer,
    relates employee,
    owns start-date,
    owns end-date,
    owns description;

  education sub relation,
    relates institute,
    relates attendee,
    owns start-date,
    owns end-date,
    owns description;

  group sub page,
    owns tag,
    owns page-visibility,
    owns post-visibility,
    plays group-membership:group;

  group-membership sub relation,
    relates group,
    relates member,
    owns rank,
    owns start-timestamp,
    owns end-timestamp;

  post sub content, abstract,
    owns post-text,
    owns creation-timestamp,
    owns language,
    owns tag,
    owns post-visibility,
    plays posting:post,
    plays sharing:original-post,
    plays commenting:parent,
    plays reaction:parent,
    plays location:located,
    plays view-permission:viewable,
    plays viewing:viewed;

  text-post sub post;

  share-post sub post,
    plays sharing:share-post;

  image-post sub post,
    owns post-image;

  video-post sub post,
    owns post-video;

  live-video-post sub video-post;

  poll-post sub post,
    owns question,
    owns answer,
    plays response:poll;

  comment sub content,
    owns comment-text,
    owns creation-timestamp,
    owns tag,
    plays commenting:comment,
    plays commenting:parent,
    plays reaction:parent;

  interaction sub relation, abstract,
    relates subject,
    relates content;

  viewing sub interaction,
    relates viewer as subject,
    relates viewed as content;

  content-engagement sub interaction, abstract,
    relates author as subject;

  posting sub content-engagement,
    relates page as content,
    relates post;

  sharing sub content-engagement,
    relates original-post as content,
    relates share-post;

  commenting sub content-engagement,
    relates parent as content,
    relates comment;

  reaction sub content-engagement,
    relates parent as content,
    owns emoji,
    owns creation-timestamp;

  response sub content-engagement,
    relates poll as content,
    owns answer,
    owns creation-timestamp;

  view-permission sub relation,
    relates viewer,
    relates viewable;

  place sub entity,
    owns name,
    plays location:place;

  region sub place,
    plays region-location:parent-region,
    plays region-location:child-region,
    plays country-location:region;

  country sub place,
    owns language,
    plays country-location:country,
    plays state-location:country,
    plays city-location:parent,
    plays landmark-location:parent;

  state sub place,
    plays state-location:state,
    plays city-location:parent,
    plays landmark-location:parent;

  city sub place,
    plays city-location:city,
    plays landmark-location:parent;

  landmark sub place,
    owns lattitude,
    owns longitude,
    plays landmark-location:landmark;

  location sub relation,
    relates place,
    relates located;

  region-location sub location,
    relates parent-region as place,
    relates child-region as located;

  country-location sub location,
    relates region as place,
    relates country as located;

  state-location sub location,
    relates country as place,
    relates state as located;

  city-location sub location,
    relates parent as place,
    relates city as located;

  landmark-location sub location,
    relates parent as place,
    relates landmark as located;

  username sub attribute, value string;
  name sub attribute, value string;
  event-date sub attribute, abstract, value datetime;
  exact-date sub event-date, abstract;
  birth-date sub exact-date;
  gender sub attribute, value string;
  language sub attribute, value string;
  email sub attribute, value string;
  phone sub attribute, value string;
  relationship-status sub attribute, value string, regex "^(single|relationship|engaged|married|complicated)$";
  bio sub text-payload;
  profile-picture sub image-payload;
  visibility sub attribute, abstract, value string;
  page-visibility sub visibility, regex "^(public|private)$";
  post-visibility sub visibility, regex "^(default|public|private)$";
  start-date sub event-date;
  end-date sub event-date;
  engagement-date sub exact-date;
  marriage-date sub exact-date;
  tag sub attribute, value string;
  description sub text-payload;
  rank sub attribute, value string, regex "^(member|moderator|admin|owner)$";
  start-timestamp sub attribute, value datetime;
  end-timestamp sub attribute, value datetime;
  creation-timestamp sub attribute, value datetime;
  payload sub attribute, abstract, value string;
  text-payload sub payload, abstract;
  media-payload sub payload, abstract;
  image-payload sub media-payload, abstract;
  video-payload sub media-payload, abstract;
  post-text sub text-payload;
  post-image sub image-payload;
  post-video sub video-payload;
  comment-text sub text-payload;
  question sub text-payload;
  answer sub text-payload;
  emoji sub attribute, value string, regex "^(like|love|funny|surprise|sad|angry)$";
  creation-timestamp sub attribute, value datetime;
  lattitude sub attribute, value double;
  longitude sub attribute, value double;

  rule relatives-are-friends:
    when {
      (relative: $person-1, relative: $person-2) isa family;
    } then {
      (friend: $person-1, friend: $person-2) isa friendship;
    };

  rule partners-are-friends:
    when {
      (partner: $person-1, partner: $person-2) isa relationship;
    } then {
      (friend: $person-1, friend: $person-2) isa friendship;
    };

  rule transitive-location:
    when {
      (place: $parent, located: $child) isa location;
      (place: $child, located: $x) isa location;
      $x isa $t;
      $t  plays location:located;
    } then {
      (place: $parent, located: $x) isa location;
    };

  rule page-view-permissions:
    when {
      $viewer isa $viewer-type;
      $page isa $page-type;
      {
        $viewer-type type profile;
        $page-type type person;
        $page has page-visibility "public";
      } or {
        (friend: $page, friend: $viewer) isa friendship;
      } or {
        $viewer-type type profile;
        $page-type type organisation;
      } or {
        $viewer-type type profile;
        $page-type type group;
        $page has page-visibility "public";
      } or {
        (group: $page, member: $viewer) isa group-membership;
      };
    } then {
      (viewer: $viewer, viewable: $page) isa view-permission;
    };

  rule default-post-visibility-per-page:
    when {
      $page has post-visibility "default";
      $page has page-visibility $page-vis;
      ?post-vis = $page-vis;
    } then {
      $page has post-visibility ?post-vis;
    };

  rule default-post-visibility-per-post:
    when {
      (page: $page, post: $post) isa posting;
      $post has post-visibility "default";
      $page has post-visibility $default-vis;
    } then {
      $post has $default-vis;
    };

  rule post-view-permissions:
    when {
      $viewer isa $viewer-type;
      (page: $page, post: $post) isa posting;
      {
        $post has post-visibility "public";
        (viewer: $viewer, viewable: $page) isa view-permission;
      } or {
        (friend: $page, friend: $viewer) isa friendship;
      } or {
        $viewer-type type profile;
        $page isa organisation;
      } or {
        (group: $page, member: $viewer) isa group-membership;
      };
    } then {
      (viewer: $viewer, viewable: $post) isa view-permission;
    };
